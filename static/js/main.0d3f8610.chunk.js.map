{"version":3,"sources":["Components/ModalAddNew.js","Components/ModalUpdate.js","Components/TableCourses.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ModalAddNew","props","handleClose","show","handleUpdate","formik","useFormik","initialValues","image","title","description","validationSchema","Yup","required","onSubmit","values","console","log","toast","success","handleSubmit","handleChange","errors","_jsxs","Modal","onHide","children","_jsx","Header","closeButton","Title","action","Body","className","htmlFor","name","type","id","placeholder","onChange","value","style","color","Footer","Button","variant","onClick","ModalUpdate","dataCouseUpdate","handeupdateCourseFromModal","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","e","_objectSpread","target","handSaveUpdate","TableCourses","Courses","_useState3","_useState4","search","setSearch","_useState5","_useState6","showModalAddNew","setShowModalAddNew","_useState7","_useState8","showModalUpdate","setShowModalUpdate","_useState9","_useState10","setDataCouseUpdate","filter","course","toLowerCase","includes","map","src","alt","href","handeUpdateCourse","newlist","handleDelete","concat","_toConsumableArray","index","findIndex","item","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","NavDropdown","Item","Divider","App","Container","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d3f8610.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { toast } from 'react-toastify';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nfunction ModalAddNew(props){\n    \n    const {handleClose ,show, handleUpdate} = props;\n    const formik = useFormik({\n        initialValues: {\n          image: \"\",\n          title: \"\",\n          description: \"\",\n        },\n        validationSchema: Yup.object({\n          image: Yup.string()\n            .required(\"Required image\"),\n          title: Yup.string()\n            .required(\"Required title\"),\n          description: Yup.string()\n            .required(\"Required description\"),\n        }),\n        onSubmit: (values) => {\n          console.log(values);\n          handleUpdate({image: values.image, title: values.title, description: values.description})\n          handleClose(false);\n          toast.success(\"add new course success\")\n        },\n      });\n      const { handleSubmit, handleChange, values, errors } = formik\n    return (\n        \n        <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Course</Modal.Title>\n        </Modal.Header>\n        <form action=\"\" onSubmit={handleSubmit}>\n        <Modal.Body>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputImage\">Title</label>\n                <input \n                    name=\"image\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputImage\" \n                    placeholder=\"http://example.jpg\"\n                    onChange={handleChange}\n                    value={values.image}\n                />\n                {\n            <p style={{ color: 'red' }}>{errors.image}</p>\n          }\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputTitle\">Title</label>\n                <input \n                    name=\"title\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputTitle\" \n                    placeholder=\"Title\"\n                    onChange={handleChange}\n                    value={values.title}\n                />\n                {\n                    <p style={{ color: 'red' }}>{errors.title}</p>\n                }\n                \n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputDes\">Description</label>\n                <input \n                    name=\"description\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputDes\" \n                    placeholder=\"Description\"\n                    onChange={handleChange}\n                    value={values.description}\n                />\n                {\n                    <p style={{ color: 'red' }}>{errors.description}</p>\n                }\n            </div>\n            \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" >\n            Add New\n          </Button>\n        </Modal.Footer>\n        </form>\n      </Modal>\n    )\n}\n\nexport default ModalAddNew;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react'\nfunction ModalUpdate(props){\n    \n    const {handleClose ,show, dataCouseUpdate, handeupdateCourseFromModal} = props;\n    const [data, setData] = useState({\n        image:'',\n        title: '',\n        description: ''\n    })\n    useEffect(() => {\n        if(show){\n            setData({image: dataCouseUpdate.image,title: dataCouseUpdate.title,description: dataCouseUpdate.description});\n        }\n    },[dataCouseUpdate]);\n    const handSaveUpdate = (data) =>{\n        handeupdateCourseFromModal({\n            image: data.image,\n            title: data.title,\n            description: data.description,\n            id: dataCouseUpdate.id\n        })\n        handleClose(false);\n        toast.success(\"Updata success\")\n    }\n    return (\n        \n        <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Course</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputImage\">Image</label>\n                <input \n                    name=\"image\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputImage\" \n                    placeholder=\"http://example.jpg\"\n                    onChange={(e) => setData({...data, image: e.target.value})}\n                    value={data.image}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputTitle\">Title</label>\n                <input \n                    name=\"title\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputTitle\" \n                    placeholder=\"Title\"\n                    onChange={(e) => setData({...data, title: e.target.value})}\n                    value={data.title}\n                />\n                \n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputDes\">Description</label>\n                <input \n                    name=\"description\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exampleInputDes\" \n                    placeholder=\"Description\"\n                    onChange={(e) => setData({...data, description: e.target.value})}\n                    value={data.description}\n                />\n            </div>\n            \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={() => handSaveUpdate(data)} >\n            Update\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n}\n\nexport default ModalUpdate;","import { useState } from 'react';\nimport './Courses.scss';\nimport Courses from './data.json'\nimport ModalAddNew from './ModalAddNew';\nimport ModalUpdate from './ModalUpdate';\nfunction TableCourses(){\n    const [data, setData] = useState(Courses);\n    const [search, setSearch] = useState('')\n    const [showModalAddNew, setShowModalAddNew] = useState(false)\n    const [showModalUpdate, setShowModalUpdate] = useState(false)\n    const handleClose = () =>{\n        setShowModalAddNew(false);\n        setShowModalUpdate(false);\n    }\n    //delete Course\n    const handleDelete = (id) =>{\n        const newlist = data.filter(course => course.id !== id);\n        setData(newlist);\n    }\n    const handleSaveAddNew = (course) =>{\n        setData([course,...data])\n    }\n    //update\n    const [dataCouseUpdate, setDataCouseUpdate] = useState({})\n    const handeUpdateCourse = (course) =>{\n        setShowModalUpdate(true)\n        setDataCouseUpdate(course)\n    }\n    const handeupdateCourseFromModal = (course) =>{\n        let index = data.findIndex(item => item.id === course.id)\n        data[index] = course;\n        setData([...data]);\n    }\n    const handlePageClick =() =>{}\nreturn (\n<div className='courses'>\n    <div className=\"Nav-bar\">\n        <h3>List Course</h3>\n        <button className=\"btn btn-success\" onClick={() => setShowModalAddNew(true)}>Add New</button>\n    </div>\n    <input type=\"text\" onChange={(e) => setSearch(e.target.value)} className=\"form-control search-course\" placeholder=\"Search Course by Title\"></input>\n    <div className=\"row\">\n        {\n            data.filter((course) =>{\n                return search.toLowerCase() === '' ? course : course.title.toLowerCase().includes(search)\n            }).map(course =>(\n                <div key={course.id} className=\"col-sm-6 col-md-4 col-lg-3\">\n                <div className=\"card item-card\" >\n                    <img className=\"card-img-top\" src={course.image} alt=\"Card image cap\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title title\">{course.title}</h5>\n                        <p className=\"card-text card-description\">{course.description}</p>\n                        <div className='button-action'>\n                            <a href=\"#\" className=\"btn btn-warning\" onClick={() => handeUpdateCourse(course)}>Edit</a>\n                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handleDelete(course.id)} >Delete</a>\n                        </div>\n                    </div>\n                </div>\n        </div>\n            ))\n        }\n        \n    </div>\n    {/* <ReactPaginate\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={3}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      /> */}\n<ModalAddNew\n    show = {showModalAddNew}\n    handleClose = {handleClose}\n    handleUpdate = {handleSaveAddNew}\n/>\n<ModalUpdate\n    show ={showModalUpdate}\n    handleClose = {handleClose}\n    dataCouseUpdate = {dataCouseUpdate}\n    handeupdateCourseFromModal = {handeupdateCourseFromModal}\n/>\n\n</div>\n)\n}\n\nexport default TableCourses\n","import Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nfunction Header(){\nreturn (\n<div>\n    <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">CRUD_REACTJS</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">\n                            Another action\n                        </NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">\n                            Separated link\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n    </Navbar>\n</div>\n)\n}\n\nexport default Header;\n","import './App.css';\nimport React from 'react';\nimport TableCourses from './Components/TableCourses';\nimport Header from './Components/Header';\nimport Container from 'react-bootstrap/Container';\nimport { ToastContainer } from 'react-toastify';\nfunction App() {\nreturn (\n<div className=\"App-container\">\n\n    <Header />\n    <Container>\n        <TableCourses />\n    </Container>\n    <ToastContainer position=\"top-right\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick\n        rtl={false} pauseOnFocusLoss draggable pauseOnHover theme=\"light\" />\n    \n    <ToastContainer />\n</div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}